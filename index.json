{"repository_name":"github.com/libpixel/libpixel.cr","body":"# LibPixel\n\n[![Built with Crystal](https://img.shields.io/badge/built%20with-crystal-000000.svg?style=flat-square)](https://crystal-lang.org/)\n[![Build status](https://img.shields.io/travis/libpixel/libpixel.cr/master.svg?style=flat-square)](https://travis-ci.org/libpixel/libpixel.cr)\n\nCrystal library to generate and sign LibPixel URLs.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     libpixel.cr:\n       github: libpixel/libpixel.cr\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"libpixel.cr\"\n```\n\nConfigure the LibPixel client:\n\n```ruby\nLibPixel.setup do |config|\n  config.host = \"test.libpx.com\" # Your LibPixel domain. Required.\n  config.https = true # Generates HTTPS URLs. Optional. Default is false.\n  config.secret = \"...\" # Auth secret for your LibPixel account. Required for signing requests.\n  config.default_source = \"us-east-1/source\" # optional source to be used, can be overriden\nend\n```\n\nThe configuration for host and secret will be automatically set from the environment variables `LIBPIXEL_HOST` and `LIBPIXEL_SECRET` if they are present.\n\n### Sign URLs\n\nYou can sign an existing URL using the `sign` function:\n\n```ruby\nurl = LibPixel.sign(\"http://test.libpx.com/images/1.jpg?width=400\")\n```\n\n### Generate URLs\n\nYou can also generate and sign URLs at the same time with the `url` function:\n\n```ruby\nurl = LibPixel.url(\"/us-east-1/images/1.jpg\", height: 400, blur: 20, saturation: -80)\n```\n\nIf you're using the `src` parameter, you can skip the path:\n\n```ruby\nurl = LibPixel.url(src: \"http://...\", width: 300)\n```\n\nBut even simpler, if the library sees a url beginning with http or https it knows what to do:\n\n```ruby\nurl = LibPixel.url(\"http://...\", width: 300)\n```\n\nYou can specify whether you what an http or https url in your call:\n\n```ruby\nurl = LibPixel.url(\"/us-east-1/images/1.jpg\", height: 400, blur: 20, saturation: -80, https: true)\n```\n\nIf you are using a default_source, you don't need to specify it in the path:\n\n```ruby\nurl = LibPixel.url(\"1.jpg\", height: 400, blur: 20, saturation: -80)\n```\n\nBut you can override it with the source parameter:\n\n```ruby\nurl = LibPixel.url(\"1.jpg\", height: 400, blur: 20, saturation: -80, source: \"us-west-1/source2\")\n```\n\n### Multiple clients\n\nIt's also possible to have multiple instances of LibPixel clients (e.g. when dealing with multiple accounts):\n\n```ruby\nclient = LibPixel::Client.new(host: \"test.libpx.com\", https: true, secret: \"...\")\n```\n\nYou may then call the `#url` and `#sign` methods on the client object.\n\n\n## License\n\n[MIT](LICENSE)\n\n\n## Contributors\n\n- [Lauri Jutila](https://github.com/ljuti) - creator and maintainer\n","program":{"html_id":"github.com/libpixel/libpixel.cr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/libpixel/libpixel.cr","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/libpixel/libpixel.cr/LibPixel","path":"LibPixel.html","kind":"module","full_name":"LibPixel","name":"LibPixel","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"libpixel/version.cr","line_number":1,"url":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/version.cr"},{"filename":"libpixel/client.cr","line_number":5,"url":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/client.cr"},{"filename":"libpixel.cr","line_number":4,"url":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel.cr"}],"repository_name":"github.com/libpixel/libpixel.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"default_client-class-method","html_id":"default_client-class-method","name":"default_client","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel.cr#L6","def":{"name":"default_client","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@default_client || (@@default_client = Client.new)"}},{"id":"default_source=(source:String)-class-method","html_id":"default_source=(source:String)-class-method","name":"default_source=","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"}],"args_string":"(source : String)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel.cr#L26","def":{"name":"default_source=","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"default_client.default_source = source"}},{"id":"host=(host:String)-class-method","html_id":"host=(host:String)-class-method","name":"host=","doc":null,"summary":null,"abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"}],"args_string":"(host : String)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel.cr#L14","def":{"name":"host=","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"default_client.host = host"}},{"id":"https=(https:Bool)-class-method","html_id":"https=(https:Bool)-class-method","name":"https=","doc":null,"summary":null,"abstract":false,"args":[{"name":"https","doc":null,"default_value":"","external_name":"https","restriction":"Bool"}],"args_string":"(https : Bool)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel.cr#L22","def":{"name":"https=","args":[{"name":"https","doc":null,"default_value":"","external_name":"https","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"default_client.https = https"}},{"id":"secret=(secret:String)-class-method","html_id":"secret=(secret:String)-class-method","name":"secret=","doc":null,"summary":null,"abstract":false,"args":[{"name":"secret","doc":null,"default_value":"","external_name":"secret","restriction":"String"}],"args_string":"(secret : String)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel.cr#L18","def":{"name":"secret=","args":[{"name":"secret","doc":null,"default_value":"","external_name":"secret","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"default_client.secret = secret"}},{"id":"setup(&block)-class-method","html_id":"setup(&amp;block)-class-method","name":"setup","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel.cr#L10","def":{"name":"setup","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield default_client"}},{"id":"sign(uri:String|URI)-class-method","html_id":"sign(uri:String|URI)-class-method","name":"sign","doc":null,"summary":null,"abstract":false,"args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"String | URI"}],"args_string":"(uri : String | URI)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel.cr#L30","def":{"name":"sign","args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"String | URI"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"default_client.sign(uri)"}},{"id":"url(path:String?,options=Hash(String,String|Int32).new)-class-method","html_id":"url(path:String?,options=Hash(String,String|Int32).new)-class-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String | Nil"},{"name":"options","doc":null,"default_value":"Hash(String, String | Int32).new","external_name":"options","restriction":""}],"args_string":"(path : String?, options = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">String</span> <span class=\"o\">|</span> <span class=\"t\">Int32</span>).<span class=\"k\">new</span>)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel.cr#L34","def":{"name":"url","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String | Nil"},{"name":"options","doc":null,"default_value":"Hash(String, String | Int32).new","external_name":"options","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"default_client.url(path, options)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/libpixel/libpixel.cr/LibPixel/Client","path":"LibPixel/Client.html","kind":"class","full_name":"LibPixel::Client","name":"Client","abstract":false,"superclass":{"html_id":"github.com/libpixel/libpixel.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/libpixel/libpixel.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/libpixel/libpixel.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"libpixel/client.cr","line_number":6,"url":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/client.cr"}],"repository_name":"github.com/libpixel/libpixel.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/libpixel/libpixel.cr/LibPixel","kind":"module","full_name":"LibPixel","name":"LibPixel"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(host=ENV[&quot;LIBPIXEL_HOST&quot;],secret=ENV[&quot;LIBPIXEL_SECRET&quot;],https=false,default_source=&quot;&quot;)-class-method","html_id":"new(host=ENV[&amp;quot;LIBPIXEL_HOST&amp;quot;],secret=ENV[&amp;quot;LIBPIXEL_SECRET&amp;quot;],https=false,default_source=&amp;quot;&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"host","doc":null,"default_value":"ENV[\"LIBPIXEL_HOST\"]","external_name":"host","restriction":""},{"name":"secret","doc":null,"default_value":"ENV[\"LIBPIXEL_SECRET\"]","external_name":"secret","restriction":""},{"name":"https","doc":null,"default_value":"false","external_name":"https","restriction":""},{"name":"default_source","doc":null,"default_value":"\"\"","external_name":"default_source","restriction":""}],"args_string":"(host = <span class=\"t\">ENV</span>[<span class=\"s\">&quot;LIBPIXEL_HOST&quot;</span>], secret = <span class=\"t\">ENV</span>[<span class=\"s\">&quot;LIBPIXEL_SECRET&quot;</span>], https = <span class=\"n\">false</span>, default_source = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/client.cr#L12","def":{"name":"new","args":[{"name":"host","doc":null,"default_value":"ENV[\"LIBPIXEL_HOST\"]","external_name":"host","restriction":""},{"name":"secret","doc":null,"default_value":"ENV[\"LIBPIXEL_SECRET\"]","external_name":"secret","restriction":""},{"name":"https","doc":null,"default_value":"false","external_name":"https","restriction":""},{"name":"default_source","doc":null,"default_value":"\"\"","external_name":"default_source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(host, secret, https, default_source)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_source:String-instance-method","html_id":"default_source:String-instance-method","name":"default_source","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/client.cr#L12","def":{"name":"default_source","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@default_source"}},{"id":"default_source=(default_source:String)-instance-method","html_id":"default_source=(default_source:String)-instance-method","name":"default_source=","doc":null,"summary":null,"abstract":false,"args":[{"name":"default_source","doc":null,"default_value":"","external_name":"default_source","restriction":"String"}],"args_string":"(default_source : String)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/client.cr#L16","def":{"name":"default_source=","args":[{"name":"default_source","doc":null,"default_value":"","external_name":"default_source","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@default_source = default_source"}},{"id":"host:String-instance-method","html_id":"host:String-instance-method","name":"host","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/client.cr#L9","def":{"name":"host","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@host"}},{"id":"host=(host:String)-instance-method","html_id":"host=(host:String)-instance-method","name":"host=","doc":null,"summary":null,"abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"}],"args_string":"(host : String)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/client.cr#L13","def":{"name":"host=","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@host = host"}},{"id":"https:Bool-instance-method","html_id":"https:Bool-instance-method","name":"https","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/client.cr#L11","def":{"name":"https","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@https"}},{"id":"https=(https:Bool)-instance-method","html_id":"https=(https:Bool)-instance-method","name":"https=","doc":null,"summary":null,"abstract":false,"args":[{"name":"https","doc":null,"default_value":"","external_name":"https","restriction":"Bool"}],"args_string":"(https : Bool)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/client.cr#L15","def":{"name":"https=","args":[{"name":"https","doc":null,"default_value":"","external_name":"https","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@https = https"}},{"id":"secret:String-instance-method","html_id":"secret:String-instance-method","name":"secret","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/client.cr#L10","def":{"name":"secret","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@secret"}},{"id":"secret=(secret:String)-instance-method","html_id":"secret=(secret:String)-instance-method","name":"secret=","doc":null,"summary":null,"abstract":false,"args":[{"name":"secret","doc":null,"default_value":"","external_name":"secret","restriction":"String"}],"args_string":"(secret : String)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/client.cr#L14","def":{"name":"secret=","args":[{"name":"secret","doc":null,"default_value":"","external_name":"secret","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@secret = secret"}},{"id":"sign(uri:String|URI)-instance-method","html_id":"sign(uri:String|URI)-instance-method","name":"sign","doc":null,"summary":null,"abstract":false,"args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"String | URI"}],"args_string":"(uri : String | URI)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/client.cr#L15","def":{"name":"sign","args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"String | URI"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if secret.blank?\n  raise(\"Your LibPixel secret must be defined (e.g. LibPixel.secret = 'SECRET')\")\nend\nif uri.is_a?(URI)\nelse\n  uri = URI.parse(uri)\nend\nquery = uri.query\ndata = uri.path\nif query && (query != \"\")\n  data = data + \"?#{query}\"\nend\nsignature = OpenSSL::HMAC.hexdigest(OpenSSL::Algorithm::SHA1, secret, data)\nif query && (query != \"\")\n  query = query + \"&\"\nend\nquery = \"#{query}signature=#{signature}\"\nuri.query = query\nuri.to_s\n"}},{"id":"url(path:String?,options=Hash(String,String|Int32).new)-instance-method","html_id":"url(path:String?,options=Hash(String,String|Int32).new)-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String | Nil"},{"name":"options","doc":null,"default_value":"Hash(String, String | Int32).new","external_name":"options","restriction":""}],"args_string":"(path : String?, options = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">String</span> <span class=\"o\">|</span> <span class=\"t\">Int32</span>).<span class=\"k\">new</span>)","source_link":"https://github.com/libpixel/libpixel.cr/blob/42bfaa6e059aae8a877fa174f284c19d20c2ea16/src/libpixel/client.cr#L36","def":{"name":"url","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String | Nil"},{"name":"options","doc":null,"default_value":"Hash(String, String | Int32).new","external_name":"options","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if host.blank?\n  raise(\"Your LibPixel host name must be defined (e.g. LibPixel.host = 'example.libpx.com')\")\nend\nuse_https = options.fetch(:https) do\n  https\nend\nsource = options.fetch(:source) do\n  default_source\nend\noptions = options.to_h\noptions = options.reject do |k|\n  k == (:source)\nend\noptions = options.reject do |k|\n  k == (:https)\nend\nquery = options.map do |k, v|\n  \"#{k}=#{URI.encode_www_form(v.to_s)}\"\nend.join(\"&\")\nif query == \"\"\n  query = nil\nend\nif source.is_a?(String) && (!source.blank?)\n  source_clean = (source.gsub(/^\\//, \"\")).gsub(/\\/$/, \"\")\n  path_clean = (path || \"\").gsub(/^\\//, \"\")\n  path = \"/#{source_clean}/#{path_clean}\"\nelse\n  if path.nil? || (path !~ (/^\\//))\n    path = \"/#{path}\"\n  end\nend\nuri = URI.new(scheme: (use_https ? \"https\" : \"http\"), host: host, path: path, query: query, fragment: nil)\nif secret && (!secret.blank?)\n  sign(uri)\nelse\n  uri\nend\n"}}],"macros":[],"types":[]}]}]}}